<!DOCTYPE html>
<html lang="en">
<head>
<meta charset=UTF-8 />
<meta name="viewport" content="width=device-width, initial-scale=1">
<title>Motion Photo Viewer</title>
<style>video {max-height:100vh} </style>
</head>

<body>
<input type="file" onchange="handleFiles(this.files)" accept="image/*,video/mp4" multiple>
</body>

<script>  //Copyright 2019 dj  ,License BSD 2-Clause
var img=location.search.slice(1)
if(img) imgtoblob(img)
  .then(blob => {
blobtovid(blob)
  });

async function imgtoblob(img) 
{
 let response = await fetch(img);
 let data = await response.arrayBuffer()
 return buffertoblob(data);
}

function buffertoblob(data) {
 var array=new Uint8Array(data), start
 for (var i = 2; i < array.length; i++) {if (array[i+4]==0x66 && array[i+5]==0x74 && array[i+6]==0x79 && array[i+7]==0x70) {start=i; break}}  //ftyp
 var blob=new Blob([array.subarray(start||0, array.length)], {type:"video/mp4"});
  return blob;
}

function blobtovid(blob) {
 const vid=document.createElement("video");
 vid.loop = true; vid.preload = 'auto'; vid.controls = true
 vid.src=window.URL.createObjectURL(blob);
 if('pictureInPictureEnabled' in document && !img) vid.onloadedmetadata = (e) => vid.requestPictureInPicture(); else document.body.append(vid)
}

function handleFiles(files) {
if(files.length>1) img=true  //
for (let i = 0; i < files.length; i++) {
const reader = new FileReader();
reader.onload = function(evt) {
 var blob=buffertoblob(evt.target.result)
 blobtovid(blob)
 }
reader.readAsArrayBuffer(files[i])
}
}
</script>
</html>
